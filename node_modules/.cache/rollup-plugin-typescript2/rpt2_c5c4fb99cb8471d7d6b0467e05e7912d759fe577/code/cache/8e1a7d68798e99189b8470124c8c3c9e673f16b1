{"code":"import { BigNumber } from '@ethersproject/bignumber';\r\nimport { getBigNumber, revertPositive } from './Utils';\r\nexport const TYPICAL_SWAP_GAS_COST = 60000;\r\nexport const TYPICAL_MINIMAL_LIQUIDITY = 1000;\r\nexport class RPool {\r\n    constructor(address, token0, token1, fee, reserve0, reserve1, minLiquidity = TYPICAL_MINIMAL_LIQUIDITY, swapGasCost = TYPICAL_SWAP_GAS_COST) {\r\n        this.address = address;\r\n        (this.token0 = token0), (this.token1 = token1);\r\n        this.fee = fee;\r\n        this.minLiquidity = minLiquidity;\r\n        this.swapGasCost = swapGasCost;\r\n        this.reserve0 = reserve0;\r\n        this.reserve1 = reserve1;\r\n    }\r\n    updateReserves(res0, res1) {\r\n        this.reserve0 = res0;\r\n        this.reserve1 = res1;\r\n    }\r\n}\r\nexport class ConstantProductRPool extends RPool {\r\n    constructor(address, token0, token1, fee, reserve0, reserve1) {\r\n        super(address, token0, token1, fee, reserve0, reserve1);\r\n        this.reserve0Number = parseInt(reserve0.toString());\r\n        this.reserve1Number = parseInt(reserve1.toString());\r\n    }\r\n    updateReserves(res0, res1) {\r\n        this.reserve0 = res0;\r\n        this.reserve0Number = parseInt(res0.toString());\r\n        this.reserve1 = res1;\r\n        this.reserve1Number = parseInt(res1.toString());\r\n    }\r\n    calcOutByIn(amountIn, direction) {\r\n        const x = direction ? this.reserve0Number : this.reserve1Number;\r\n        const y = direction ? this.reserve1Number : this.reserve0Number;\r\n        return { out: (y * amountIn) / (x / (1 - this.fee) + amountIn), gasSpent: this.swapGasCost };\r\n    }\r\n    calcInByOut(amountOut, direction) {\r\n        const x = direction ? this.reserve0Number : this.reserve1Number;\r\n        const y = direction ? this.reserve1Number : this.reserve0Number;\r\n        if ((y - amountOut) < this.minLiquidity) // not possible swap\r\n            return { inp: Number.POSITIVE_INFINITY, gasSpent: this.swapGasCost };\r\n        let input = (x * amountOut) / (1 - this.fee) / (y - amountOut);\r\n        return { inp: input, gasSpent: this.swapGasCost };\r\n    }\r\n    calcCurrentPriceWithoutFee(direction) {\r\n        return this.calcPrice(0, direction, false);\r\n    }\r\n    calcPrice(amountIn, direction, takeFeeIntoAccount) {\r\n        const x = direction ? this.reserve0Number : this.reserve1Number;\r\n        const y = direction ? this.reserve1Number : this.reserve0Number;\r\n        const oneMinusFee = takeFeeIntoAccount ? 1 - this.fee : 1;\r\n        const xf = x / oneMinusFee;\r\n        return (y * xf) / (xf + amountIn) / (xf + amountIn);\r\n    }\r\n    calcInputByPrice(price, direction, takeFeeIntoAccount) {\r\n        const x = direction ? this.reserve0Number : this.reserve1Number;\r\n        const y = direction ? this.reserve1Number : this.reserve0Number;\r\n        const oneMinusFee = takeFeeIntoAccount ? 1 - this.fee : 1;\r\n        const xf = x / oneMinusFee;\r\n        return Math.sqrt(y * xf * price) - xf; // TODO: or y*xf/price ???\r\n    }\r\n    getLiquidity() {\r\n        return Math.sqrt(this.reserve0Number * this.reserve1Number);\r\n    }\r\n}\r\nexport class HybridRPool extends RPool {\r\n    constructor(address, token0, token1, fee, A, reserve0, reserve1) {\r\n        super(address, token0, token1, fee, reserve0, reserve1);\r\n        this.A_PRECISION = 100;\r\n        this.A = A;\r\n        this.D = BigNumber.from(0);\r\n    }\r\n    updateReserves(res0, res1) {\r\n        this.D = BigNumber.from(0);\r\n        this.reserve0 = res0;\r\n        this.reserve1 = res1;\r\n    }\r\n    computeLiquidity() {\r\n        if (!this.D.eq(0))\r\n            return this.D; // already calculated\r\n        const r0 = this.reserve0;\r\n        const r1 = this.reserve1;\r\n        if (r0.isZero() && r1.isZero())\r\n            return BigNumber.from(0);\r\n        const s = r0.add(r1);\r\n        const nA = BigNumber.from(this.A * 2);\r\n        let prevD;\r\n        let D = s;\r\n        for (let i = 0; i < 256; i++) {\r\n            const dP = D.mul(D).div(r0).mul(D).div(r1).div(4);\r\n            prevD = D;\r\n            D = nA\r\n                .mul(s)\r\n                .div(this.A_PRECISION)\r\n                .add(dP.mul(2))\r\n                .mul(D)\r\n                .div(nA.div(this.A_PRECISION).sub(1).mul(D).add(dP.mul(3)));\r\n            if (D.sub(prevD).abs().lte(1)) {\r\n                break;\r\n            }\r\n        }\r\n        this.D = D;\r\n        return D;\r\n    }\r\n    computeY(x) {\r\n        const D = this.computeLiquidity();\r\n        const nA = this.A * 2;\r\n        let c = D.mul(D)\r\n            .div(x.mul(2))\r\n            .mul(D)\r\n            .div((nA * 2) / this.A_PRECISION);\r\n        let b = D.mul(this.A_PRECISION).div(nA).add(x);\r\n        let yPrev;\r\n        let y = D;\r\n        for (let i = 0; i < 256; i++) {\r\n            yPrev = y;\r\n            y = y.mul(y).add(c).div(y.mul(2).add(b).sub(D));\r\n            if (y.sub(yPrev).abs().lte(1)) {\r\n                break;\r\n            }\r\n        }\r\n        return y;\r\n    }\r\n    calcOutByIn(amountIn, direction) {\r\n        const xBN = direction ? this.reserve0 : this.reserve1;\r\n        const yBN = direction ? this.reserve1 : this.reserve0;\r\n        const xNewBN = xBN.add(getBigNumber(amountIn * (1 - this.fee)));\r\n        const yNewBN = this.computeY(xNewBN);\r\n        const dy = parseInt(yBN.sub(yNewBN).toString());\r\n        return { out: dy, gasSpent: this.swapGasCost };\r\n    }\r\n    calcInByOut(amountOut, direction) {\r\n        const xBN = direction ? this.reserve0 : this.reserve1;\r\n        const yBN = direction ? this.reserve1 : this.reserve0;\r\n        let yNewBN = yBN.sub(getBigNumber(amountOut));\r\n        if (yNewBN.lt(1))\r\n            // lack of precision\r\n            yNewBN = BigNumber.from(1);\r\n        const xNewBN = this.computeY(yNewBN);\r\n        let input = Math.round(parseInt(xNewBN.sub(xBN).toString()) / (1 - this.fee));\r\n        //if (input < 1) input = 1\r\n        return { inp: input, gasSpent: this.swapGasCost };\r\n    }\r\n    calcCurrentPriceWithoutFee(direction) {\r\n        return this.calcPrice(0, direction, false);\r\n    }\r\n    calcPrice(amountIn, direction, takeFeeIntoAccount) {\r\n        const xBN = direction ? this.reserve0 : this.reserve1;\r\n        const x = parseInt(xBN.toString());\r\n        const oneMinusFee = takeFeeIntoAccount ? 1 - this.fee : 1;\r\n        const D = parseInt(this.computeLiquidity().toString());\r\n        const A = this.A / this.A_PRECISION;\r\n        const xI = x + amountIn;\r\n        const b = 4 * A * xI + D - 4 * A * D;\r\n        const ac4 = (D * D * D) / xI;\r\n        const Ds = Math.sqrt(b * b + 4 * A * ac4);\r\n        const res = (0.5 - (2 * b - ac4 / xI) / Ds / 4) * oneMinusFee;\r\n        return res;\r\n    }\r\n    calcInputByPrice(price, direction, takeFeeIntoAccount, hint = 1) {\r\n        // TODO:  (x:number) => this.calcPrice(x, !direction, takeFeeIntoAccount)  ???\r\n        return revertPositive((x) => 1 / this.calcPrice(x, direction, takeFeeIntoAccount), price, hint);\r\n    }\r\n}\r\n//# sourceMappingURL=PrimaryPools.js.map","references":["/Users/mazelon/Workarea/teleswap-tines-sdk/node_modules/@ethersproject/bignumber/lib/index.d.ts","/Users/mazelon/Workarea/teleswap-tines-sdk/src/Utils.ts"],"map":"{\"version\":3,\"file\":\"PrimaryPools.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/PrimaryPools.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/mazelon/Workarea/teleswap-tines-sdk/PrimaryPools.d.ts","writeByteOrderMark":false,"text":"import { BigNumber } from '@ethersproject/bignumber';\r\nexport declare const TYPICAL_SWAP_GAS_COST = 60000;\r\nexport declare const TYPICAL_MINIMAL_LIQUIDITY = 1000;\r\nexport interface RToken {\r\n    name: string;\r\n    address: string;\r\n}\r\nexport declare abstract class RPool {\r\n    readonly address: string;\r\n    readonly token0: RToken;\r\n    readonly token1: RToken;\r\n    readonly fee: number;\r\n    reserve0: BigNumber;\r\n    reserve1: BigNumber;\r\n    readonly minLiquidity: number;\r\n    readonly swapGasCost: number;\r\n    constructor(address: string, token0: RToken, token1: RToken, fee: number, reserve0: BigNumber, reserve1: BigNumber, minLiquidity?: number, swapGasCost?: number);\r\n    updateReserves(res0: BigNumber, res1: BigNumber): void;\r\n    abstract calcOutByIn(amountIn: number, direction: boolean): {\r\n        out: number;\r\n        gasSpent: number;\r\n    };\r\n    abstract calcInByOut(amountOut: number, direction: boolean): {\r\n        inp: number;\r\n        gasSpent: number;\r\n    };\r\n    abstract calcCurrentPriceWithoutFee(direction: boolean): number;\r\n}\r\nexport declare class ConstantProductRPool extends RPool {\r\n    reserve0Number: number;\r\n    reserve1Number: number;\r\n    constructor(address: string, token0: RToken, token1: RToken, fee: number, reserve0: BigNumber, reserve1: BigNumber);\r\n    updateReserves(res0: BigNumber, res1: BigNumber): void;\r\n    calcOutByIn(amountIn: number, direction: boolean): {\r\n        out: number;\r\n        gasSpent: number;\r\n    };\r\n    calcInByOut(amountOut: number, direction: boolean): {\r\n        inp: number;\r\n        gasSpent: number;\r\n    };\r\n    calcCurrentPriceWithoutFee(direction: boolean): number;\r\n    calcPrice(amountIn: number, direction: boolean, takeFeeIntoAccount: boolean): number;\r\n    calcInputByPrice(price: number, direction: boolean, takeFeeIntoAccount: boolean): number;\r\n    getLiquidity(): number;\r\n}\r\nexport declare class HybridRPool extends RPool {\r\n    readonly A: number;\r\n    readonly A_PRECISION = 100;\r\n    D: BigNumber;\r\n    constructor(address: string, token0: RToken, token1: RToken, fee: number, A: number, reserve0: BigNumber, reserve1: BigNumber);\r\n    updateReserves(res0: BigNumber, res1: BigNumber): void;\r\n    computeLiquidity(): BigNumber;\r\n    computeY(x: BigNumber): BigNumber;\r\n    calcOutByIn(amountIn: number, direction: boolean): {\r\n        out: number;\r\n        gasSpent: number;\r\n    };\r\n    calcInByOut(amountOut: number, direction: boolean): {\r\n        inp: number;\r\n        gasSpent: number;\r\n    };\r\n    calcCurrentPriceWithoutFee(direction: boolean): number;\r\n    calcPrice(amountIn: number, direction: boolean, takeFeeIntoAccount: boolean): number;\r\n    calcInputByPrice(price: number, direction: boolean, takeFeeIntoAccount: boolean, hint?: number): number;\r\n}\r\n"}}
