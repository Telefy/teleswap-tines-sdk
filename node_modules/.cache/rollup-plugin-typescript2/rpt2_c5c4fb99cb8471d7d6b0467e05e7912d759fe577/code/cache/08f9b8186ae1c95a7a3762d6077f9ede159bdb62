{"code":"import { BigNumber } from '@ethersproject/bignumber';\r\nexport var PoolType;\r\n(function (PoolType) {\r\n    PoolType[\"ConstantProduct\"] = \"ConstantProduct\";\r\n    PoolType[\"Weighted\"] = \"Weighted\";\r\n    PoolType[\"Hybrid\"] = \"Hybrid\";\r\n    PoolType[\"ConcentratedLiquidity\"] = \"ConcentratedLiquidity\";\r\n})(PoolType || (PoolType = {}));\r\nexport class Pool {\r\n    constructor(_info) {\r\n        const info = {\r\n            minLiquidity: 1000,\r\n            swapGasCost: 40000,\r\n            ..._info,\r\n        };\r\n        this.address = info.address;\r\n        this.token0 = info.token0;\r\n        this.token1 = info.token1;\r\n        this.type = info.type;\r\n        this.reserve0 = info.reserve0;\r\n        this.reserve1 = info.reserve1;\r\n        this.fee = info.fee;\r\n        this.minLiquidity = info.minLiquidity;\r\n        this.swapGasCost = info.swapGasCost;\r\n    }\r\n}\r\nexport class RConstantProductPool extends Pool {\r\n    constructor(info) {\r\n        super({\r\n            type: PoolType.ConstantProduct,\r\n            ...info,\r\n        });\r\n    }\r\n}\r\nexport class RHybridPool extends Pool {\r\n    constructor(info) {\r\n        super({\r\n            type: PoolType.Hybrid,\r\n            ...info,\r\n        });\r\n        this.A = info.A;\r\n    }\r\n}\r\nexport class RWeightedPool extends Pool {\r\n    constructor(info) {\r\n        super({\r\n            type: PoolType.Weighted,\r\n            ...info,\r\n        });\r\n        this.weight0 = info.weight0;\r\n        this.weight1 = info.weight1;\r\n    }\r\n}\r\nexport class RConcentratedLiquidityPool extends Pool {\r\n    constructor(info) {\r\n        super({\r\n            type: PoolType.ConcentratedLiquidity,\r\n            reserve0: BigNumber.from(0),\r\n            reserve1: BigNumber.from(0),\r\n            ...info,\r\n        });\r\n        this.liquidity = info.liquidity;\r\n        this.sqrtPrice = info.sqrtPrice;\r\n        this.nearestTick = info.nearestTick;\r\n        this.ticks = info.ticks;\r\n    }\r\n}\r\n//# sourceMappingURL=MultiRouterTypes.js.map","references":["/Users/mazelon/Workarea/teleswap-tines-sdk/node_modules/@ethersproject/bignumber/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"MultiRouterTypes.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/deprecated/MultiRouterTypes.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAOpD,MAAM,CAAN,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,+CAAmC,CAAA;IACnC,iCAAqB,CAAA;IACrB,6BAAiB,CAAA;IACjB,2DAA+C,CAAA;AACjD,CAAC,EALW,QAAQ,KAAR,QAAQ,QAKnB;AAkBD,MAAM,OAAO,IAAI;IAWf,YAAY,KAA2B;QACrC,MAAM,IAAI,GAAG;YACX,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE,KAAM;YACnB,GAAG,KAAK;SACT,CAAA;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;IACrC,CAAC;CACF;AAID,MAAM,OAAO,oBAAqB,SAAQ,IAAI;IAC5C,YAAY,IAAoB;QAC9B,KAAK,CAAC;YACJ,IAAI,EAAE,QAAQ,CAAC,eAAe;YAC9B,GAAG,IAAI;SACR,CAAC,CAAA;IACJ,CAAC;CACF;AAID,MAAM,OAAO,WAAY,SAAQ,IAAI;IAEnC,YAAY,IAAoB;QAC9B,KAAK,CAAC;YACJ,IAAI,EAAE,QAAQ,CAAC,MAAM;YACrB,GAAG,IAAI;SACR,CAAC,CAAA;QACF,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA;IACjB,CAAC;CACF;AAID,MAAM,OAAO,aAAc,SAAQ,IAAI;IAGrC,YAAY,IAAsB;QAChC,KAAK,CAAC;YACJ,IAAI,EAAE,QAAQ,CAAC,QAAQ;YACvB,GAAG,IAAI;SACR,CAAC,CAAA;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;IAC7B,CAAC;CACF;AAgBD,MAAM,OAAO,0BAA2B,SAAQ,IAAI;IAKlD,YAAY,IAAgB;QAC1B,KAAK,CAAC;YACJ,IAAI,EAAE,QAAQ,CAAC,qBAAqB;YACpC,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3B,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3B,GAAG,IAAI;SACR,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;IACzB,CAAC;CACF\"}","dts":{"name":"/Users/mazelon/Workarea/teleswap-tines-sdk/deprecated/MultiRouterTypes.d.ts","writeByteOrderMark":false,"text":"import { BigNumber } from '@ethersproject/bignumber';\r\ninterface RToken {\r\n    name: string;\r\n    address: string;\r\n}\r\nexport declare enum PoolType {\r\n    ConstantProduct = \"ConstantProduct\",\r\n    Weighted = \"Weighted\",\r\n    Hybrid = \"Hybrid\",\r\n    ConcentratedLiquidity = \"ConcentratedLiquidity\"\r\n}\r\nexport interface PoolInfo {\r\n    address: string;\r\n    token0: RToken;\r\n    token1: RToken;\r\n    type: PoolType;\r\n    reserve0: BigNumber;\r\n    reserve1: BigNumber;\r\n    fee: number;\r\n    minLiquidity: number;\r\n    swapGasCost: number;\r\n}\r\ndeclare type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\r\ndeclare type PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\r\ndeclare type PoolInfoWithDefaults = PartialBy<PoolInfo, 'minLiquidity' | 'swapGasCost'>;\r\nexport declare class Pool {\r\n    address: string;\r\n    token0: RToken;\r\n    token1: RToken;\r\n    type: PoolType;\r\n    reserve0: BigNumber;\r\n    reserve1: BigNumber;\r\n    fee: number;\r\n    minLiquidity: number;\r\n    swapGasCost: number;\r\n    constructor(_info: PoolInfoWithDefaults);\r\n}\r\ndeclare type PoolInfoNoType = Omit<PoolInfoWithDefaults, 'type'>;\r\nexport declare class RConstantProductPool extends Pool {\r\n    constructor(info: PoolInfoNoType);\r\n}\r\ndeclare type HybridPoolInfo = PoolInfoNoType & {\r\n    A: number;\r\n};\r\nexport declare class RHybridPool extends Pool {\r\n    A: number;\r\n    constructor(info: HybridPoolInfo);\r\n}\r\ndeclare type WeightedPoolInfo = PoolInfoNoType & {\r\n    weight0: number;\r\n    weight1: number;\r\n};\r\nexport declare class RWeightedPool extends Pool {\r\n    weight0: number;\r\n    weight1: number;\r\n    constructor(info: WeightedPoolInfo);\r\n}\r\ninterface CLTick {\r\n    index: number;\r\n    DLiquidity: number;\r\n}\r\ninterface CLSpecific {\r\n    liquidity: number;\r\n    sqrtPrice: number;\r\n    nearestTick: number;\r\n    ticks: CLTick[];\r\n}\r\ndeclare type CLPoolInfo = Omit<PoolInfoNoType, 'reserve0' | 'reserve1'> & CLSpecific;\r\nexport declare class RConcentratedLiquidityPool extends Pool {\r\n    liquidity: number;\r\n    sqrtPrice: number;\r\n    nearestTick: number;\r\n    ticks: CLTick[];\r\n    constructor(info: CLPoolInfo);\r\n}\r\nexport {};\r\n"}}
