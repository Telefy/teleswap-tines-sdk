{"code":"import { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { RPool } from \"./PrimaryPools\";\r\nimport { getBigNumber } from './Utils';\r\n// xy(xx+yy) = k\r\nexport class StableSwapRPool extends RPool {\r\n    constructor(address, token0, token1, fee, reserve0, reserve1) {\r\n        super(address, token0, token1, fee, reserve0, reserve1);\r\n        this.k = BigNumber.from(0);\r\n    }\r\n    updateReserves(res0, res1) {\r\n        this.k = BigNumber.from(0);\r\n        this.reserve0 = res0;\r\n        this.reserve1 = res1;\r\n    }\r\n    computeK() {\r\n        if (this.k.isZero()) {\r\n            const x = this.reserve0;\r\n            const y = this.reserve1;\r\n            this.k = x.mul(y).mul(x.mul(x).add(y.mul(y)));\r\n        }\r\n        return this.k;\r\n    }\r\n    computeY(x, yHint) {\r\n        const k = this.computeK();\r\n        const x2 = x.shl(1);\r\n        const x3 = x.mul(3);\r\n        const xCube = x.mul(x).mul(x);\r\n        let yPrev = yHint, y = yHint;\r\n        for (let i = 0; i < 255; ++i) {\r\n            const ySquare = y.mul(y);\r\n            const yCube = ySquare.mul(y);\r\n            y = yCube.mul(x2).add(k).div(ySquare.mul(x3).add(xCube));\r\n            if (y.sub(yPrev).abs().lte(1))\r\n                break;\r\n            yPrev = y;\r\n        }\r\n        return y;\r\n    }\r\n    calcOutByIn(amountIn, direction) {\r\n        const x = direction ? this.reserve0 : this.reserve1;\r\n        const y = direction ? this.reserve1 : this.reserve0;\r\n        const xNew = x.add(getBigNumber(Math.floor(amountIn * (1 - this.fee))));\r\n        const yNew = this.computeY(xNew, y);\r\n        const out = parseInt(y.sub(yNew).toString()) - 1; // with precision loss compensation\r\n        return { out: Math.max(out, 0), gasSpent: this.swapGasCost };\r\n    }\r\n    calcInByOut(amountOut, direction) {\r\n        const x = direction ? this.reserve0 : this.reserve1;\r\n        const y = direction ? this.reserve1 : this.reserve0;\r\n        let yNew = y.sub(getBigNumber(Math.ceil(amountOut)));\r\n        if (yNew.lt(this.minLiquidity)) // not possible swap\r\n            return { inp: Number.POSITIVE_INFINITY, gasSpent: this.swapGasCost };\r\n        const xNew = this.computeY(yNew, x);\r\n        let input = Math.round(parseInt(xNew.sub(x).toString()) / (1 - this.fee)) + 1; // with precision loss compensation\r\n        return { inp: input, gasSpent: this.swapGasCost };\r\n    }\r\n    calcCurrentPriceWithoutFee(direction) {\r\n        const calcDirection = this.reserve0.gt(this.reserve1);\r\n        const xBN = calcDirection ? this.reserve0 : this.reserve1;\r\n        // TODO: make x = max(x, y)\r\n        const x = parseInt(xBN.toString());\r\n        const k = parseInt(this.computeK().toString());\r\n        const q = k / x / 2;\r\n        const qD = -q / x; // devivative of q\r\n        const Q = Math.pow(x, 6) / 27 + q * q;\r\n        const QD = 6 * Math.pow(x, 5) / 27 + 2 * q * qD; // derivative of Q\r\n        const sqrtQ = Math.sqrt(Q);\r\n        const sqrtQD = 1 / 2 / sqrtQ * QD; // derivative of sqrtQ\r\n        const a = sqrtQ + q;\r\n        const aD = sqrtQD + qD;\r\n        const b = sqrtQ - q;\r\n        const bD = sqrtQD - qD;\r\n        const a3 = Math.pow(a, 1 / 3);\r\n        const a3D = 1 / 3 * a3 / a * aD;\r\n        const b3 = Math.pow(b, 1 / 3);\r\n        const b3D = 1 / 3 * b3 / b * bD;\r\n        const yD = a3D - b3D;\r\n        // For testing\r\n        // const yBN = calcDirection ? this.reserve1 : this.reserve0\r\n        // const y = parseInt(yBN.toString())\r\n        // const yC= a3-b3\r\n        // console.assert(Math.abs(yC/y - 1) < 1e-8)\r\n        return calcDirection == direction ? -yD : -1 / yD;\r\n    }\r\n}\r\n//# sourceMappingURL=StableSwapPool.js.map","references":["/Users/mazelon/Workarea/teleswap-tines-sdk/node_modules/@ethersproject/bignumber/lib/index.d.ts","/Users/mazelon/Workarea/teleswap-tines-sdk/src/PrimaryPools.ts","/Users/mazelon/Workarea/teleswap-tines-sdk/src/Utils.ts"],"map":"{\"version\":3,\"file\":\"StableSwapPool.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/StableSwapPool.ts\"],\"names\":[],\"mappings\":\"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\"}"}
